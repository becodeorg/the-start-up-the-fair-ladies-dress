* {
    margin: 0;
    padding: 0;
}

html {
    font-size: 10px;
}

.logo {
    height: 15vh;
    width: 13vh;
}

.nav-bar-container {
    background-color: #2b2024;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    height: 15vh;
}

.nav-bar-left-container-1{
    background-color: #2b2024;
    padding:1rem 0 0 1rem;
    display:flex;
}

.logo-container {
    display: flex;
    justify-content: center;
}

.icon-container {
    display: flex;
    justify-content: end;
    padding-top: 2rem;
}

.fa-envelope {
    color: #FD0054;
}

.fa-heart,
.fa-user,
.fa-shopping-cart,
.fa-sign-out-alt {
    @extend.fa-envelope;
}

.contact-us,
.my-account,
.wish-list,
.shopping-cart,
.check-out {
    padding: 1rem;
}

.nb-pic1,
.nb-pic2 {
    height: 9.5rem;
    width: 9.5rem;
    padding: 1rem;
}

/* Additional code for a carousel, that is not being use; but it is quite basic and easy to interpret so possibly useful 

#slider figure {
    position: relative;
    width: 500%;
    margin: 0;
    left: 0;
    animation: 12s slider infinite;
    }
    
    #slider figure img {
    width: 20%;
    float: right;
    }
    
    @keyframes slider {
    0% {
    left: 0;
    }
    20% {
    left: 0;
    }
    25% {
    left: -100%;
    }
    45% {
    left: -100%
    }
    50% {
    left: -200%
    }
    70% {
    left: -200%
    }
    75% {
    left:-300%
    }
    95% {
    left: 300%
    }
    100% {
    left: -400%
    }
    }

.carousel-container {
    display: flex;
    flex-direction: row;
}
 */

.navs {
    width: 100vw;
}

#dresslist {
    display: flex;
    justify-content: space-evenly;
    margin: 0 2rem 0 2rem;
    background-color: #a80038;


    li {
        padding: 1rem 0 1rem 0;
        display: inline-block;
        text-decoration: none;

        a {
            text-decoration: none;
            color: #fbf9fa;
            font-size: 1.8rem;
        }
    }
}

aside {
    margin: 2rem 2rem 0 2rem;

    .sideNavBar {
        font-size: 1.5rem;
        width: 200px;
        height: 350px;
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;

        a {
            display: flex;
            justify-content: center;
            padding: 0.5em 0 0.5em 0;
            border: solid 1px;
            border-radius: 5px;
            text-decoration: none;
            color: #2b2024;
        }
    }
}

.container {
    display: flex;
    flex-direction: row;

}

.carousel {
    margin-left: 23rem;
    width: 22.61vw;
    height: 63.9vh;
}

.carousel-item {
    width: auto;
    text-align: center;

}

/* Responsiveness code  */
@media only screen and (max-width: 479px) {
    body {
        background-color:#E0B0FF;
    }
}


@media only screen and (min-width: 480px) and (max-width:1023px) {
    body {
        background-color: green;
    }
}

@media only screen and (min-width: 1024px) {
    body {
        background-color: blue;
    }
}

body {
    margin: 0;
    overflow: hidden;
  }
  
  .nav-bar-container-background {
    width: 100vw;
    height: 15vh;
    background: #2B2024;
  }
  
  $particleSize: 10vmin;
  $animationDuration: 6s;
  $amount: 20;
  .nav-bar-container-background span {
    width: $particleSize;
    height: $particleSize;
    border-radius: $particleSize;
    backface-visibility: hidden;
    position: absolute;
    animation-name: move;
    animation-duration: $animationDuration;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    $colors: (
      #2B2024, 
      #A80038,
      #FD0054,
      #FBF9FA,
    );
    @for $i from 1 through $amount {
      &:nth-child(#{$i}) {
        color: nth($colors, random(length($colors)));
        top: random(100) * 1%;
        left: random(100) * 1%;
        animation-duration: (random($animationDuration * 10) / 10) * 1s + 10s;
        animation-delay: random(($animationDuration + 10s) * 10) / 10 * -1s;
        transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
        $blurRadius: (random() + 0.5) * $particleSize * 0.5;
        $x: if(random() > 0.5, -1, 1);
        box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;
      }
    }
  }
  
  @keyframes move {
    100% {
      transform: translate3d(0, 0, 1px) rotate(360deg);
    }
  }